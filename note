# use state 
- component dibagi jadi 2 , stateless dan statefull component 
- stateless itu yang pake fungsi , dan statefull itu yang pake class react.component 
- untuk impplement state dulu harus pake statefull component , tetapi sekarang bisa pake stateless menggunakan usestate


# lifecycle
- urutannya lifecylce sederhana react : constructor -> render - > componentDidMount -> render lagi (state) -> componentDidUpdate
- jadi untuk constructor biasanya digunakan untuk initialize state / props
- dan componentDidMount akan di exec setelah render biasanya digunakan untuk pengambilan data
- componentDidUpdate akan di exec setelah adanya perubahan state / props 

# useEffect 
- hooks untuk manipulasi component , untuk syncronize antar component 
- contohnya cart yang ditambahin itu efek ke total price 
- sama kaya componentdidmount , dan parameter keduanya itu componentdidupdate
- ini jadi 2 fungsi jadi satu di componente stateless 

# useRef
- bedanya sama useEffect , useRef tidak akan merender ulang component
- kalo useState kan ada setter function , kalo useRef gada 
- useRef ini juga ga langsung ngubah tampilan kaya useState , tapi aksi ketika dia simpan 
ke local storage akan tetep berjalan 
- useRef juga bisa digunakan untuk manipulasi DOM 
- contohnya ketika kita ingin buat auto focus ke suatu input ketika pertama kali diload di page login 

# hooks 
- user bisa buat hooks sendiri 
- untuk penamaannya wajib diawali dengan use , contoh useLogin
- ini bisa sangat membantu reusable function , seperti bisa menjadi fungsi untuk middleware

# redux 
- memudahkan untuk mengirimkan data ke parent paling atas
- contohnya ketika dari Elements ingin mengirim data ke Layouts , tidak perlu melewati Fragments
- mirip kaya context di golang 
- lifecycle redux reducer -> store -> dispacth -> reducer -> store -> subscribe 

# redux toolkit 
- ini yang lebih terbaru , yang redux biasa sudah deprecated 

# redux with slice 
- ini lebih simple lagi , bisa gabungin action sama reducer 
